name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: postgres
        ports: [5432:5432]
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:admin@localhost:5432/postgres
      JWT_SECRET: admin
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install backend dependencies
        run: |
          cd backend
          npm ci
      - name: Run backend tests
        run: |
          cd backend
          npm run test
      - name: Install frontend dependencies
        run: |
          cd task-manager-frontend
          npm ci
      - name: Run frontend tests
        run: |
          cd task-manager-frontend
          npm run test -- --watchAll=false

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Build backend
        run: |
          cd backend
          npm ci
          npm run build
      - name: Build frontend
        run: |
          cd task-manager-frontend
          npm ci
          npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      # Example: DockerHub deployment (uncomment and set secrets to use)
      # - name: Log in to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Build and push backend image
      #   run: |
      #     docker build -t your-dockerhub-username/taskmanager-backend ./backend
      #     docker push your-dockerhub-username/taskmanager-backend
      # - name: Build and push frontend image
      #   run: |
      #     docker build -t your-dockerhub-username/taskmanager-frontend ./task-manager-frontend
      #     docker push your-dockerhub-username/taskmanager-frontend
      # Example: Vercel/Netlify/Render/Heroku deployment can be added here
      - name: Deployment placeholder
        run: echo "Add deployment steps for your cloud platform here."
